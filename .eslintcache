[{"C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\index.js":"1","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\reportWebVitals.js":"2","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\App.js":"3","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\Theme.js":"4","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\Header.js":"5","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\Home.js":"6","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\WeatherCards.js":"7","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\Details.js":"8","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\fetchWeather.js":"9","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\StateProvider.js":"10","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\reducer.js":"11","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\AddedWeatherCards.js":"12","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\NotFound.js":"13","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\Sidebar.js":"14"},{"size":688,"mtime":1614627214546,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1613423551322,"results":"17","hashOfConfig":"16"},{"size":1161,"mtime":1614802104108,"results":"18","hashOfConfig":"16"},{"size":814,"mtime":1614515999034,"results":"19","hashOfConfig":"16"},{"size":1178,"mtime":1614799113151,"results":"20","hashOfConfig":"16"},{"size":4715,"mtime":1614802176897,"results":"21","hashOfConfig":"16"},{"size":3506,"mtime":1614794289740,"results":"22","hashOfConfig":"16"},{"size":11600,"mtime":1614794566903,"results":"23","hashOfConfig":"16"},{"size":732,"mtime":1614727428535,"results":"24","hashOfConfig":"16"},{"size":732,"mtime":1614626997680,"results":"25","hashOfConfig":"16"},{"size":1826,"mtime":1614835718869,"results":"26","hashOfConfig":"16"},{"size":5412,"mtime":1614836972419,"results":"27","hashOfConfig":"16"},{"size":290,"mtime":1614760622102,"results":"28","hashOfConfig":"16"},{"size":1596,"mtime":1614802355698,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1kvwt2e",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\index.js",[],["63","64"],"C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\App.js",[],"C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\Theme.js",[],"C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\Header.js",[],"C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\Home.js",["65","66"],"import React, {useState, useEffect} from 'react';\r\nimport './Home.css';\r\nimport WeatherCards from './WeatherCards';\r\n// import Snowy from '../images/snowy.png';\r\n// import Cloudy from '../images/cloudy.png'\r\nimport { fetchWeather } from './fetchWeather'\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport { useStateValue } from '../StateProvider';\r\nimport AddedWeatherCards from './AddedWeatherCards';\r\nimport { AiOutlineCaretDown } from 'react-icons/ai'\r\n\r\nfunction Home() {\r\n    const [{cities}, dispatch] = useStateValue();\r\n   \r\n    const [homeError, setHomeError] = useState(\" \");\r\n    const [image, setImage] = useState();\r\n    const [weatherData, setWeatherData] = useState({});\r\n    const [query, setQuery] =useState('');\r\n\r\n    const imageUrl = `http://openweathermap.org/img/wn/${image}@2x.png`;\r\n\r\n   \r\n    \r\n    useEffect(() =>{\r\n        search()\r\n    },[])\r\n\r\n   \r\n\r\n    const search = async () => {\r\n        await fetchWeather(query)\r\n            .then(response => {\r\n                console.log(\"Home:\", response.data)\r\n                setWeatherData(response.data)\r\n                setImage(response.data.weather[0].icon)\r\n\r\n\r\n            })\r\n            .catch(function(error) {\r\n                console.log(\"Eroor From Home\", error.response.data)\r\n                setHomeError(error.response.data.message)\r\n                console.log(\"HomeError:\", homeError)\r\n            });\r\n        // setWeatherData(data.data);\r\n        // setImage(data.data.weather[0].icon)\r\n        console.log(\"Weather Data\", weatherData)\r\n        setQuery('');  \r\n       \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n\r\n            <div className=\"home__input__container\">\r\n                <input \r\n                    type=\"text\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    placeholder=\"SEARCH...\"  \r\n                    className=\"home__input\"\r\n                />\r\n                {/* onKeyPress={search} */}\r\n\r\n                <button className=\"home__btn\" onClick={search}>\r\n                    <BsSearch className=\"home__btn__icon\" />\r\n                </button>\r\n            </div>\r\n            \r\n           <div className=\"home__weathercards\">\r\n                {/* <WeatherCards \r\n                    name=\"Tunisia\"\r\n                    image={Cloudy}\r\n                    degree={20}\r\n                    max={26}\r\n                    min={18}\r\n                    description=\"Cloudy\"\r\n                />\r\n\r\n                <WeatherCards \r\n                    name=\"Finland\"\r\n                    image={Snowy}\r\n                    degree={10}\r\n                    min={-15}\r\n                    max={12}\r\n                    description=\"Snowing\"\r\n                /> */}\r\n\r\n\r\n                {weatherData.main && (\r\n                    <WeatherCards \r\n                        name={weatherData.name}\r\n                        country = {weatherData.sys?.country}\r\n                        image={imageUrl}\r\n                        degree={weatherData.main.temp}\r\n                        description={weatherData.weather[0].description}\r\n                        min={weatherData.main.temp_min}\r\n                        max={weatherData.main.temp_max}\r\n                        humidity = {weatherData.main.humidity}\r\n                        pressure = {weatherData.main.pressure}\r\n                    \r\n                    />\r\n                )}\r\n\r\n                \r\n                {/* <WeatherCards addNewCity /> */}\r\n           </div>\r\n           \r\n\r\n            {/* cities from contenxt api */}\r\n          <div className=\"home__cities\">\r\n           \r\n            {cities?.length === 0 ? (\r\n               <div className=\"home__emptyState\">\r\n                    <p>You currently dont have prefered cities</p>\r\n               </div>\r\n            ): (\r\n                <div id=\"#myweather\" className=\"_cities\">\r\n                    <div>\r\n                        <h4>My Weather <span> <AiOutlineCaretDown className=\"home__icon\" /></span></h4>\r\n                    </div>\r\n\r\n                    {cities.map((city) => (\r\n                        <AddedWeatherCards\r\n                            name={city.name}\r\n                            country = {city.country}\r\n                            image={city.image}\r\n                            degree={city.degree}\r\n                            description={city.description}\r\n                            min={city.min}\r\n                            max={city.max}\r\n                            humidity = {city.humidity}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n          </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\WeatherCards.js",["67"],"import React, { useEffect } from 'react';\r\nimport './WeatherCards.css' ;\r\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from 'react-icons/ai'\r\nimport { GrAddCircle } from 'react-icons/gr'\r\nimport AddNewCityImage from '../images/sunset.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStateValue } from '../StateProvider'\r\nimport { actionTypes } from '../reducer';\r\n\r\n\r\nfunction WeatherCards({addNewCity, name, country, image, degree, description, min, max, humidity, pressure}) {\r\n    const [{}, dispatch] = useStateValue();\r\n    \r\n    \r\n    useEffect(() => {\r\n       \r\n    }, [])\r\n\r\n\r\n    const addCity = () => {\r\n        dispatch({\r\n           type: actionTypes.ADD_CITY,\r\n           city: {\r\n                name,\r\n                country,\r\n                image,\r\n                degree,\r\n                description,\r\n                min,\r\n                max,\r\n                humidity,\r\n                pressure,\r\n           }\r\n       })\r\n    }\r\n\r\n    const goToDetails = () => {\r\n        dispatch({\r\n            type: actionTypes.SEE_TEMP_CITY,\r\n            city: {\r\n                name,\r\n                country,\r\n                image,\r\n                degree,\r\n                description,\r\n                min,\r\n                max,\r\n                humidity,\r\n                pressure,\r\n            }\r\n        });\r\n\r\n        dispatch({\r\n            type: actionTypes.SET_QUERY,\r\n            query: name,\r\n        })\r\n\r\n    }\r\n\r\n    return !addNewCity ? (\r\n        <div className=\"weathercard\">\r\n            <Link onClick={goToDetails} to={`/details/${name}`}>\r\n                <div className=\"weathercard__container\">\r\n                    <p className=\"weathercard__name\">{name}</p>\r\n                    <span>{country}</span>\r\n                    <div>\r\n                        <img className=\"weathercard__image\" src={image} alt=\"Weather Condition\" />\r\n                    </div>\r\n                    <p className=\"weathercard__degree\">{degree.toFixed()}&deg;</p>\r\n                    <p className=\"weathercard__description\"> {description} </p>\r\n\r\n                    <div className=\"weathercard__bottom\">\r\n                        <div>\r\n                            <AiOutlineCaretDown className=\"min\" />\r\n                            <p >{min.toFixed()}</p>\r\n                            <p className=\"weathercard__bottom__p\">Min</p>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <AiOutlineCaretUp className=\"max\" /> \r\n                            <p>{max.toFixed()}</p>\r\n                            <p className=\"weathercard__bottom__p\">Max</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"weathercard__btn__container\">\r\n                        <button onClick={addCity} className=\"weathercard__btn\">\r\n                            Add City +\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    ):(\r\n        <div className=\"weathercard__add__container\">\r\n            <div className=\"weathercard__add\">\r\n                <p className=\"weathercard__name__add\">Add City</p>\r\n                <div>\r\n                    <GrAddCircle className=\"weathercard__addbtn\" />\r\n                </div>\r\n                <div>\r\n                    <img className=\"weathercard__image\" src={AddNewCityImage} alt=\"\" />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherCards\r\n","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\Details.js",["68","69","70"],"import React,{ useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Details.css'\r\nimport { IoIosArrowRoundBack } from 'react-icons/io';\r\nimport { useStateValue } from '../StateProvider';\r\nimport { fetchForecast } from './fetchWeather'; \r\nimport { BsDropletHalf, BsArrowDownShort } from 'react-icons/bs'\r\nimport NotFound from './NotFound';\r\n\r\nfunction Details() {\r\n    const [{tempCities, query}, dispatch] = useStateValue();\r\n    const [forecast, setForecast] = useState({});\r\n\r\n    useEffect(() => {\r\n        getForecast()\r\n    }, [])\r\n\r\n    const getForecast = async () => {\r\n        const forecastData = await fetchForecast(query);\r\n        setForecast(forecastData?.list)\r\n        console.log(\"Forecast\", forecastData?.list)\r\n    }\r\n\r\n    const getIcon = (path) => {\r\n        const imagUrl = `http://openweathermap.org/img/wn/${path}@2x.png`;\r\n        return imagUrl;\r\n    }\r\n\r\n    const editDegree = (deg) => {\r\n        var n = deg?.toFixed(0)\r\n        return n;\r\n    }\r\n\r\n    const formatDate = (val) => {\r\n        var options = { year: 'numeric', month: 'long', day: 'numeric'};\r\n        return new Date(val).toLocaleDateString([], options);\r\n    }\r\n\r\n    const formatTime = (val) => {\r\n        var time = new Date(val).toLocaleTimeString(\"en-US\");\r\n        return time;\r\n    }\r\n\r\n    return (\r\n        <div className=\"details\">\r\n            \r\n            <div className=\"details__container\">\r\n                <div className=\"details__back\">\r\n                   <Link to=\"/\">\r\n                        <IoIosArrowRoundBack className=\"details__back__icon\" />\r\n                   </Link>\r\n                </div>\r\n\r\n\r\n                {tempCities?.length === 0 ? (\r\n                    <div>\r\n                        No City Selected\r\n                    </div>\r\n                ):(\r\n                    tempCities.map((city) => (\r\n                        <div className=\"details__card \">\r\n                            <div className=\"details__card__top\" >\r\n                                <div>\r\n                                    <p className=\"details__degree\">{editDegree(city.degree)}&deg;</p>\r\n                                    <span className=\"details__description\">{city.description}</span>\r\n                                    <div className=\"details__max__min\">\r\n                                        <div>\r\n                                            <p className=\"min__max\">{editDegree(city.min)}&deg;</p>\r\n                                            <p>MIN</p>\r\n                                        </div>\r\n                                  \r\n                                       <div>\r\n                                           <p className=\"min__max\">{editDegree(city.max)}&deg;</p>\r\n                                            <p>MAX</p>\r\n                                       </div>\r\n                                    </div>\r\n                                    <div className=\"details__hum__pres\">\r\n                                        <p> <BsDropletHalf /> {city?.humidity ?  `Humidity: ${city?.humidity}%` : '' }</p>\r\n                                        <p><BsArrowDownShort />{city?.pressure ? `Pressure: ${city.pressure}` : ''} </p>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div>\r\n                                    <img className=\"details__image\" src={city.image} alt=\" \"/>\r\n                                </div>\r\n                                <div>\r\n                                    <h3 className=\"details__name\">{city.name}</h3>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            {/* Bottom card */}\r\n                            <div>\r\n                                {forecast?.length === 0 ? (\r\n                                    \"\"\r\n                                ):(\r\n                                    <div className=\"details__card__bottom\">\r\n                                       \r\n                                        <div className=\"details__right\">\r\n                                            <div>\r\n                                                <p className=\"details__date\" >{formatDate(forecast[1]?.dt_txt)}</p>\r\n                                                <p className=\"details__date\" >{formatTime(forecast[1]?.dt)}</p>\r\n                                                <img src={getIcon(forecast[1]?.weather[0].icon)} alt =\"\" />\r\n                                                <p className=\"details__mini__degree\" >{editDegree(forecast[1]?.main.temp)}&deg;</p>\r\n                                                <p className=\"details__mini__description\">{forecast[1]?.weather[0].description}</p>\r\n                                                <p className=\"details__mini__wind\">\r\n                                                    Wind:<span>{editDegree(forecast[1]?.wind?.speed)}km/h</span>\r\n                                                </p>\r\n                                                {/*  <span>{forecast[1]?.wind?.deg}&deg;</span>\r\n                                                    Speed */}\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"details__date\" >{formatDate(forecast[7]?.dt_txt)}</p>\r\n                                                <p className=\"details__date\" >{formatTime(forecast[7]?.dt)}</p>\r\n                                                <img src={getIcon(forecast[7]?.weather[0].icon)} alt=\"\" />\r\n                                                <p className=\"details__mini__degree\">{editDegree(forecast[7]?.main.temp)}&deg;</p>\r\n                                                <p className=\"details__mini__description\" >{forecast[7]?.weather[0].description}</p>\r\n                                                <p className=\"details__mini__wind\" >\r\n                                                    Wind: \r\n                                                    <span>{editDegree(forecast[7]?.wind?.speed)} km/h</span>\r\n                                                </p>\r\n                                                {/*  <span>{forecast[7]?.wind?.deg}&deg;</span>\r\n                                                    Speed */}\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"details__date\" >{formatDate(forecast[15]?.dt_txt)}</p>\r\n                                                <p className=\"details__date\" >{formatTime(forecast[15]?.dt)}</p>\r\n                                                <img src={getIcon(forecast[15]?.weather[0].icon)} alt=\"\" />\r\n                                                <p className=\"details__mini__degree\" >{editDegree(forecast[15]?.main.temp)}&deg;</p>\r\n                                                <p className=\"details__mini__description\" >{forecast[15]?.weather[0].description}</p>\r\n                                                <p className=\"details__mini__wind\" >\r\n                                                    Wind: \r\n                                                     <span>{editDegree(forecast[15]?.wind?.speed)} km/h</span>\r\n\r\n                                                </p>\r\n                                                {/* <span>{forecast[15]?.wind?.deg}&deg;</span>\r\n                                                    Speed */}\r\n                                            </div>\r\n                                             <div>\r\n                                                <p className=\"details__date\" >{formatDate(forecast[23]?.dt_txt)}</p>\r\n                                                <p className=\"details__date\" >{formatTime(forecast[23]?.dt)}</p>\r\n                                                <img src={getIcon(forecast[23]?.weather[0].icon)} alt=\"\" />\r\n                                                <p className=\"details__mini__degree\" >{editDegree(forecast[23]?.main.temp)}&deg;</p>\r\n                                                <p className=\"details__mini__description\" >{forecast[23]?.weather[0].description}</p>\r\n                                                <p className=\"details__mini__wind\" >\r\n                                                    Wind: \r\n                                                    <span>{editDegree(forecast[23]?.wind?.speed)} km/h</span>\r\n\r\n                                                </p>\r\n                                                {/*  <span>{forecast[23]?.wind?.deg}&deg;</span>\r\n                                                    Speed */}\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"details__date\" >{formatDate(forecast[31]?.dt_txt)}</p>\r\n                                                <p className=\"details__date\" >{formatTime(forecast[31]?.dt)}</p>\r\n                                                <img src={getIcon(forecast[31]?.weather[0].icon)} alt=\"\" />\r\n                                                <p className=\"details__mini__degree\" >{editDegree(forecast[31]?.main.temp)}&deg;</p>\r\n                                                <p className=\"details__mini__description\" >{forecast[31]?.weather[0].description}</p>\r\n                                                <p className=\"details__mini__wind\" >\r\n                                                    Wind: \r\n                                                    <span>{editDegree(forecast[31]?.wind?.speed)} km/h</span>\r\n                                                </p>\r\n                                                {/* <span>{forecast[31]?.wind?.deg}&deg;</span>\r\n                                                    Speed */}\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                <p className=\"details__date\" >{formatDate(forecast[39]?.dt_txt)}</p>\r\n                                                <p className=\"details__date\" >{formatTime(forecast[39]?.dt)}</p>\r\n                                                <img src={getIcon(forecast[34]?.weather[0].icon)} alt=\"\" />\r\n                                                <p className=\"details__mini__degree\" >{editDegree(forecast[39]?.main.temp)}&deg;</p>\r\n                                                <p className=\"details__mini__description\" >{forecast[39]?.weather[0].description}</p>\r\n                                                <p className=\"details__mini__wind\" >\r\n                                                    Wind: \r\n                                                    <span>{editDegree(forecast[39]?.wind?.speed)} km/h</span>\r\n                                                </p>\r\n                                                {/* <span>{forecast[31]?.wind?.deg}&deg;</span>\r\n                                                    Speed */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                   \r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            \r\n                {/* <span className=\"details__circle\"></span>      */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\fetchWeather.js",[],"C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\StateProvider.js",[],"C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\reducer.js",[],"C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\AddedWeatherCards.js",["71","72","73","74"],"import React, { useState, useEffect } from 'react';\r\nimport './AddedWeatherCard.css';\r\nimport { Link } from 'react-router-dom'\r\nimport { AiOutlineCaretDown, AiOutlineCaretUp } from 'react-icons/ai'\r\nimport { GrAddCircle } from 'react-icons/gr'\r\nimport { useStateValue } from '../StateProvider';\r\nimport { actionTypes } from '../reducer';\r\nimport Rain from '../images/rain.png'\r\nimport ClearSky from '../images/sunny.png'\r\nimport Mist from '../images/mist.png'\r\nimport Snow from '../images/snowy.png';\r\nimport Cloudy from '../images/cloudy.png'\r\nimport Fog from '../images/fog.png'\r\nimport ScatteredClouds from '../images/scatteredClouds.png'\r\nimport Haze from '../images/fog.png';\r\n\r\n\r\nfunction AddedWeatherCards({addNewCity, name, country, image, degree, description, min, max, humidity, pressure}) {\r\n    const [{}, dispatch] = useStateValue();\r\n    \r\n    const goToDetails = () => {\r\n        dispatch({\r\n            type: actionTypes.SEE_TEMP_CITY,\r\n            city: {\r\n                name,\r\n                country,\r\n                image,\r\n                degree,\r\n                description,\r\n                min,\r\n                max,\r\n                humidity,\r\n                pressure,\r\n            }\r\n        });\r\n\r\n        dispatch({\r\n            type: actionTypes.SET_QUERY,\r\n            query: name,\r\n        })\r\n\r\n    }\r\n\r\n    const removeCity = () => {\r\n        dispatch({\r\n            type: actionTypes.REMOVE_CITY,\r\n            name: name,\r\n        })\r\n    }    \r\n    return (\r\n        <div className=\"addedWeatherCard\">\r\n            \r\n                <div>\r\n                    <Link className=\"container\" onClick={goToDetails} to={`/details/${name}`}>\r\n                        <div>\r\n                            <p className=\"weathercard__name\">{name}</p>\r\n                            <span>{country}</span>\r\n                        </div>\r\n\r\n                        <div>\r\n                            {description === \"light rain\" ? (\r\n                                <img className=\"addedweathercard__image\" src={Rain} alt=\"Weather Condition\" />\r\n                            ):\"\"}\r\n                            {description === \"clear sky\" ? (\r\n                                <img className=\"addedweathercard__image\" src={ClearSky} alt=\"Weather Condition\" />\r\n                            ):\"\"}\r\n                            {description === \"mist\" ? (\r\n                                <img className=\"addedweathercard__image\" src={Mist} alt=\"Weather Condition\" />\r\n                            ): \"\"}\r\n                            {description === \"snow\" ? (\r\n                                <img className=\"addedweathercard__image\" src={Snow} alt=\"Weather Condition\" />\r\n                            ): \"\"}\r\n                            {description === \"overcast clouds\" ? (\r\n                                <img className=\"addedweathercard__image\" src={Cloudy} alt=\"Weather Condition\" />\r\n                            ): \"\"}\r\n                            {description === \"few clouds\" ? (\r\n                                <img className=\"addedweathercard__image\" src={Cloudy} alt=\"Weather Condition\" />\r\n                            ): \"\"}\r\n                            {description === \"scattered clouds\" ? (\r\n                                <img className=\"addedweathercard__image\" src={ScatteredClouds} alt=\"Weather Condition\" />\r\n                            ): \"\"}\r\n                            {description === \"broken clouds\" ? (\r\n                                <img className=\"addedweathercard__image\" src={ScatteredClouds} alt=\"Weather Condition\" />\r\n                            ): \"\"}\r\n                            {description === \"light snow\" ? (\r\n                                <img className=\"addedweathercard__image\" src={Snow} alt=\"Weather Condition\" />\r\n                            ): \"\"}\r\n                            {description === \"fog\" ? (\r\n                                <img className=\"addedweathercard__image\" src={Fog} alt=\"Weather Condition\" />\r\n                            ): \"\"}\r\n                            {description === \"haze\" ? (\r\n                                <img className=\"addedweathercard__image\" src={Haze} alt=\"Weather Condition\" />\r\n                            ): \"\"}\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p className=\"addedweathercard__degree\">{degree.toFixed()}&deg;</p>\r\n                            <p className=\"addedweathercard__description\"> {description} </p>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <AiOutlineCaretDown className=\"_icon\" />\r\n                            <p >{min.toFixed()}</p>\r\n                            <p className=\"addedweathercard__p\">Min</p>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <AiOutlineCaretUp className=\"_icon\" /> \r\n                            <p>{max.toFixed()}</p>\r\n                            <p className=\"addedweathercard__p\">Max</p>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"btn__container\">\r\n                        <button onClick={removeCity} className=\"btn\">\r\n                            Remove City\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n           \r\n    )\r\n}\r\n\r\nexport default AddedWeatherCards\r\n","C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\NotFound.js",[],"C:\\Users\\aoyet\\Desktop\\Personal Programs\\Weather App\\react-weather-app\\src\\components\\Sidebar.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":22,"nodeType":"81","messageId":"82","endLine":13,"endColumn":30},{"ruleId":"83","severity":1,"message":"84","line":26,"column":7,"nodeType":"85","endLine":26,"endColumn":9,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":12,"column":12,"nodeType":"89","messageId":"90","endLine":12,"endColumn":14},{"ruleId":"79","severity":1,"message":"91","line":8,"column":8,"nodeType":"81","messageId":"82","endLine":8,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":11,"column":33,"nodeType":"81","messageId":"82","endLine":11,"endColumn":41},{"ruleId":"83","severity":1,"message":"92","line":16,"column":8,"nodeType":"85","endLine":16,"endColumn":10,"suggestions":"93"},{"ruleId":"79","severity":1,"message":"94","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"95","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"96","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":21},{"ruleId":"87","severity":1,"message":"88","line":19,"column":12,"nodeType":"89","messageId":"90","endLine":19,"endColumn":14},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.","ArrayExpression",["99"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'NotFound' is defined but never used.","React Hook useEffect has a missing dependency: 'getForecast'. Either include it or remove the dependency array.",["100"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'GrAddCircle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [search]",{"range":"105","text":"106"},"Update the dependencies array to be: [getForecast]",{"range":"107","text":"108"},[867,869],"[search]",[567,569],"[getForecast]"]